// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieApp.Data;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MovieApp.Migrations
{
    [DbContext(typeof(MovieAppContext))]
    [Migration("20231228134908_newmigration")]
    partial class newmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MovieApp.Model.CustomerCred", b =>
                {
                    b.Property<int>("customer_cred_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customer_cred_ID"), 1L, 1);

                    b.Property<int>("customer_ID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("customer_cred_ID");

                    b.ToTable("CustomerCreds");
                });

            modelBuilder.Entity("MovieApp.Model.Movie", b =>
                {
                    b.Property<int>("movie_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("movie_ID"), 1L, 1);

                    b.Property<string>("age_rating")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("director")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("rating")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("release_date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("synopsis")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("movie_ID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieApp.Model.MyCustomer", b =>
                {
                    b.Property<int>("customer_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customer_ID"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<long>("phone")
                        .HasColumnType("NUMBER(19)");

                    b.HasKey("customer_ID");

                    b.ToTable("MyCustomers");
                });

            modelBuilder.Entity("MovieApp.Model.Screen", b =>
                {
                    b.Property<int>("screen_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("screen_ID"), 1L, 1);

                    b.Property<string>("capacity")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("sc_tier_ID")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("screen_ID");

                    b.ToTable("Screens");
                });

            modelBuilder.Entity("MovieApp.Model.ScreenTier", b =>
                {
                    b.Property<int>("tier_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tier_ID"), 1L, 1);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("price")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("tier_ID");

                    b.ToTable("ScreenTiers");
                });

            modelBuilder.Entity("MovieApp.Model.Seat", b =>
                {
                    b.Property<int>("seat_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("seat_ID"), 1L, 1);

                    b.Property<int>("screen_ID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("seat_type")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("seat_ID");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("MovieApp.Model.SeatType", b =>
                {
                    b.Property<int>("type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("type_ID"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("price")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("type_ID");

                    b.ToTable("SeatTypes");
                });

            modelBuilder.Entity("MovieApp.Model.Showing", b =>
                {
                    b.Property<int>("showing_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("showing_ID"), 1L, 1);

                    b.Property<DateTime>("date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("movie_ID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("scheduler_ID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("screen_ID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("start_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("showing_ID");

                    b.ToTable("Showings");
                });

            modelBuilder.Entity("MovieApp.Model.Staff", b =>
                {
                    b.Property<int>("staff_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staff_ID"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("staff_ID");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("MovieApp.Model.StaffCredential", b =>
                {
                    b.Property<int>("staffcred_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staffcred_ID"), 1L, 1);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("staff_ID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("staffcred_ID");

                    b.ToTable("StaffCredentials");
                });

            modelBuilder.Entity("MovieApp.Model.Ticket", b =>
                {
                    b.Property<int>("ticket_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ticket_ID"), 1L, 1);

                    b.Property<int>("customer_ID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("price")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int>("seat_ID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("showing_ID")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ticket_ID");

                    b.ToTable("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
